"""create many table

Revision ID: b8b43c9d4838
Revises: 
Create Date: 2024-03-25 11:58:56.939169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8b43c9d4838'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_competitions')),
    sa.UniqueConstraint('name', name=op.f('uq_competitions_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('password', name=op.f('uq_users_password')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('complexes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('is_qualifying', sa.Boolean(), nullable=False),
    sa.Column('start_time', sa.Time(timezone=True), nullable=False),
    sa.Column('end_time', sa.Time(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], name=op.f('fk_complexes_competition_id_competitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_complexes')),
    sa.UniqueConstraint('id', 'competition_id', name=op.f('uq_complexes_id'))
    )
    op.create_table('contributions',
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.Enum('full', 'partial', name='mode', native_enum=False), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.CheckConstraint("mode IN ('partial', 'full')", name=op.f('ck_contributions_contribution_mode')),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], name=op.f('fk_contributions_competition_id_competitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('competition_id', 'mode', name=op.f('pk_contributions'))
    )
    op.create_table('participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('fullname', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('is_qualified', sa.Boolean(), nullable=False),
    sa.Column('is_arrived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], name=op.f('fk_participants_competition_id_competitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_participants')),
    sa.UniqueConstraint('email', name=op.f('uq_participants_email'))
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.Enum('full', 'partial', name='mode', native_enum=False), nullable=False),
    sa.Column('pay_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("mode IN ('partial', 'full')", name=op.f('ck_payments_payment_mode')),
    sa.ForeignKeyConstraint(['competition_id', 'mode'], ['contributions.competition_id', 'contributions.mode'], name=op.f('fk_payments_competition_id_contributions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('fk_payments_participant_id_participants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments')),
    sa.UniqueConstraint('competition_id', 'participant_id', 'mode', name=op.f('uq_payments_competition_id'))
    )
    op.create_table('qualifying_videos',
    sa.Column('complex_id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('video_url', sa.String(length=255), nullable=False),
    sa.Column('qualifier_status', sa.Enum('qualified', 'unqualified', name='qualifierstatus'), nullable=False),
    sa.ForeignKeyConstraint(['complex_id'], ['complexes.id'], name=op.f('fk_qualifying_videos_complex_id_complexes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('fk_qualifying_videos_participant_id_participants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('complex_id', 'participant_id', name=op.f('pk_qualifying_videos'))
    )
    op.create_table('results',
    sa.Column('complex_id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('view', sa.Enum('kg', 'meters', 'min', 'reps', 'cl', name='viewresult'), nullable=False),
    sa.Column('result', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['complex_id'], ['complexes.id'], name=op.f('fk_results_complex_id_complexes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('fk_results_participant_id_participants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('complex_id', 'participant_id', name=op.f('pk_results'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('results')
    op.drop_table('qualifying_videos')
    op.drop_table('payments')
    op.drop_table('participants')
    op.drop_table('contributions')
    op.drop_table('complexes')
    op.drop_table('users')
    op.drop_table('competitions')
    # ### end Alembic commands ###
